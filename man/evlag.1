.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "EVLAG" "1" "July 2021" "evlag 2.5" ""
.hy
.SH NAME
.PP
evlag \- add lag and monitor input for device(s)
.SH SYNOPSIS
.PP
\f[B]evlag\f[] [OPTION]
.PP
Must be run as a superuser.
.SH DESCRIPTION
.PP
evlag is a command line tool that adds lag to one or more Linux devices.
evlag can also log the events to a file, with a separate file per
device.
.SH OPTIONS
.TP
.B \f[B]\-b\f[], \f[B]\-\-buffer=NUM\f[]
Set the size of the device buffer (in events) (default 40)
.RS
.RE
.TP
.B \f[B]\-d, \-\-device=FILE\f[]
Specify the input device /dev/input/eventX to lag/log
.RS
.RE
.TP
.B \f[B]\-f\f[], \f[B]\-\-file=FILE\f[]
Specify the logfile for events (default none)
.RS
.RE
.TP
.B \f[B]\-h\f[], \f[B]\-\-Hz=NUM\f[]
Set the polling rate of the input device(s) (1 \- 8192, default 2048)
.RS
.RE
.TP
.B \f[B]\-l\f[], \f[B]\-\-lag=NUM\f[]
Set the length of delay (in milliseconds) (default 0)
.RS
.RE
.TP
.B \f[B]\-p\f[], \f[B]\-\-priority=NUM\f[]
Set the scheduler priority (1 \- 99, default 20).
Lower is higher priority.
.RS
.RE
.TP
.B \f[B]\-r, \f[]\-\-resize=NUM**
Set the resize factor for increasing the buffer when full (default 2x)
.RS
.RE
.TP
.B \f[B]\-v\f[], \-\-verbose**
Set verbosity on to display evlag settings and options (default off)
.RS
.RE
.TP
.B \f[B]\-?\f[], \-\-help**
List the command line options
.RS
.RE
.TP
.B \f[B]\-\-usage\f[]
Provide a short usage message
.RS
.RE
.TP
.B \f[B]\-V\f[], \f[B]\-\-version\f[]
Print the program version
.RS
.RE
.SH EXAMPLES
.TP
.B \f[B]sudo ./evlag \-l 10 \-d /dev/input/event3\f[]
adds 10 milliseconds of delay to the event3 device (e.g., a gamepad)
with a polling rate of 8192 Hz.
.RS
.RE
.TP
.B \f[B]sudo ./evlag \-h 8192 \-l 100 \-d /dev/input/event6 \-d /dev/input/event10\f[]
adds 100 milliseconds of delay to the event6 and event10 devices (e.g.,
a mouse and a keyboard) with a polling rate of 8192 Hz.
.RS
.RE
.TP
.B \f[B]sudo ../evlag/evlag \-d /dev/input/event10 \-f out\f[]
logs output from the event10 device (e.g., a mouse) to a file prefixed
with \f[I]out\f[].
Since \f[I]\-l\f[] is not specified, this does not add any lag.
.RS
.RE
.SH OUTPUT
.PP
If specified, the logfile output is in comma separated value (CSV)
format, with each row:
.PP
millisec, event\-type, event\-code, event\-value
.PP
The first row is the header.
The first column is the time the event happened (in milliseconds)
relative to the start, followed by the event type, event code and event
value.
.SH EXIT VALUES
.PP
SIG if exited due to a signal (e.g., SIGINT)
.PP
EXIT_FAILURE if exit due to some error (e.g., lack of sudo permission)
.SH BUGS
.PP
Evlag has been known to infrequently stop logging device events in the
middle of execution.
.SH COPYRIGHT
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.
.SH AUTHOR
.PP
Mark Claypool, WPI
.SH SEE ALSO
.PP
evparse.py(1), evdetect.sh(1)
.PP
For more information, see:
.PP
Shengmei Liu and Mark Claypool.
"EvLag \- A Tool for Monitoring and Lagging Linux Input Devices", In
\f[I]Proceedings of the ACM Multimedia Systems Conference (MMSys)\f[],
Istanbul, Turkey, September 28 \- October 1, 2021.
Online at: http://www.cs.wpi.edu/~claypool/papers/evlag/
.SH AUTHORS
Mark Claypool.
